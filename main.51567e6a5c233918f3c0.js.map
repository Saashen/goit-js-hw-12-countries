{"version":3,"sources":["webpack:///./templates/markupTemplate.hbs","webpack:///./js/fetchWeather.js","webpack:///./js/getGeoPosition.js","webpack:///./index.js"],"names":["Handlebars","__webpack_require__","module","exports","template","compiler","main","container","depth0","helpers","partials","data","stack1","alias1","lambda","alias2","escapeExpression","current","weather_icons","weather_descriptions","location","name","temperature","humidity","wind_speed","useData","baseURL","fetchWeather","query","fetch","then","response","json","catch","error","console","message","getGeoPosition","options","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","PNotify","notice","text","refs","searchForm","document","querySelector","weatherSection","weatherInfo","querySelectorAll","buildWeatherMarkup","item","weatherShowTemplate","insertWeatherMarkup","insertAdjacentHTML","classList","remove","coords","latitude","longitude","addEventListener","e","preventDefault","currentTarget","elements","city","value","markup"],"mappings":"gFAAA,IAAAA,EAAiBC,EAAQ,QAEzBC,EAAAC,SAAAH,EAAA,SAAAA,GAAAI,SAAA,CAAiEC,SAAA,eAAAC,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACjE,IAAAC,EAAAC,EAAAN,EAAAO,OAAAC,EAAAR,EAAAS,iBAEA,gCACAD,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAM,cAAAN,EAAAJ,IACA,UACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAO,qBAAAP,EAAAJ,IACA,oDACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAY,SAAAZ,GAAAI,EAAAS,KAAAT,EAAAJ,IACA,0DACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAU,YAAAV,EAAAJ,IACA,kEACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAW,SAAAX,EAAAJ,IACA,mDACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAY,WAAAZ,EAAAJ,IACA,kEACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAO,qBAAAP,EAAAJ,IACA,eACCiB,SAAA,uGCpBKC,EAAU,sCAED,SAASC,EAAaC,GAMjC,OAAOC,MAAMH,EAJC,gDACP,UAAYE,IAIhBE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,4DCRb,SAASC,IACtB,IAAMC,EAAU,CACdC,WAAY,MAGd,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQJ,KAI9DD,IACGP,KAAK,SAAAV,GAAQ,OAAIA,EAASY,SAC1BC,MAAM,SAAAC,GAKL,OAJAC,QAAQD,MAAMA,EAAME,SACLU,IAAQC,OAAO,CAC5BC,KAAM,wECZZ,IAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,eAAgBF,SAASC,cAAc,YACvCE,YAAaH,SAASI,iBAAiB,MA4BzC,SAASC,EAAmBC,GAC1B,OAAOC,IAAoBD,GAG7B,SAASE,EAAoBF,GAC3BR,EAAKI,eAAeO,mBAAmB,YAAaH,GACpDR,EAAKI,eAAeQ,UAAUC,OAAO,aA3BvCzB,IAAiBP,KAAK,SAAAnB,GAEpBgB,EADiBhB,EAAKoD,OAAOC,SAAlB,IAA8BrD,EAAKoD,OAAOE,WACjCnC,KAAK,SAAAnB,GAEvBgD,EADeH,EAAmB7C,QAKtCsC,EAAKC,WAAWgB,iBAAiB,SAEjC,SAA6BC,GAC3BA,EAAEC,iBAIFzC,EAFmBwC,EAAEE,cAAcC,SAASC,KAAKC,OAExB1C,KAAK,SAAAnB,GAC5B,IAAM8D,EAASjB,EAAmB7C,GAClCgD,EAAoBc","file":"main.51567e6a5c233918f3c0.js","sourcesContent":["var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, alias1=container.lambda, alias2=container.escapeExpression;\n\n  return \"<img class=\\\"icon\\\" src=\\\"\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_icons : stack1), depth0))\n    + \"\\\" alt=\\\"\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_descriptions : stack1), depth0))\n    + \"\\\" />\\r\\n<p>Location: <span data-field=\\\"location\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.location : depth0)) != null ? stack1.name : stack1), depth0))\n    + \"</span></p>\\r\\n<p>Temperature: <span data-field=\\\"temp\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.temperature : stack1), depth0))\n    + \"&#8451;</span></p>\\r\\n<p>Humidity: <span data-field=\\\"humidity\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.humidity : stack1), depth0))\n    + \"</span></p>\\r\\n<p>Wind: <span data-field=\\\"wind\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.wind_speed : stack1), depth0))\n    + \"kph</span></p>\\r\\n<p>Conditions: <span data-field=\\\"conditions\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_descriptions : stack1), depth0))\n    + \"</span></p>\";\n},\"useData\":true});","const baseURL = 'http://api.weatherstack.com/current';\r\n\r\nexport default function fetchWeather(query) {\r\n    const options = {\r\n      access_key: '?access_key=e80b1338f6db063f3d397ba66dc07fa6',\r\n      query: `&query=${query}`,\r\n    };\r\n\r\n    return fetch(baseURL + options.access_key + options.query)\r\n      .then(response => response.json())\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }","import 'pnotify/dist/PNotifyBrightTheme.css';\r\nimport PNotify from 'pnotify/dist/es/PNotify';\r\n\r\nexport default function getGeoPosition() {\r\n  const options = {\r\n    maximumAge: 1000 * 60 * 30,\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n}\r\n\r\ngetGeoPosition()\r\n  .then(location => location.json())\r\n  .catch(error => {\r\n    console.error(error.message);\r\n    const notice = PNotify.notice({\r\n      text: 'Нет прав доступа к геопозиции, используйте поиск по имени города.',\r\n    });\r\n    return notice;\r\n  });\r\n","import './styles.css';\n\nimport fetchWeather from './js/fetchWeather';\nimport weatherShowTemplate from './templates/markupTemplate.hbs';\nimport getGeoPosition from './js/getGeoPosition';\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  weatherSection: document.querySelector('#weather'),\n  weatherInfo: document.querySelectorAll('p'),\n};\n\n// Заміна результатів погоди\n// Прибрати табличку з error (location.json is not a function)\n// Ссылку на иконку в ответе от Apixu API необходимо дополнить протоколом `https:`\n\ngetGeoPosition().then(data => {\n  const query = `${data.coords.latitude},${data.coords.longitude}`;\n  fetchWeather(query).then(data => {\n    const markup = buildWeatherMarkup(data);\n    insertWeatherMarkup(markup);\n  });\n});\n\nrefs.searchForm.addEventListener('submit', searchSubmitHandler);\n\nfunction searchSubmitHandler(e) {\n  e.preventDefault();\n\n  const inputValue = e.currentTarget.elements.city.value;\n\n  fetchWeather(inputValue).then(data => {\n    const markup = buildWeatherMarkup(data);\n    insertWeatherMarkup(markup);\n  });\n}\n\nfunction buildWeatherMarkup(item) {\n  return weatherShowTemplate(item);\n}\n\nfunction insertWeatherMarkup(item) {\n  refs.weatherSection.insertAdjacentHTML('beforeend', item);\n  refs.weatherSection.classList.remove('is-hidden');\n}\n"],"sourceRoot":""}